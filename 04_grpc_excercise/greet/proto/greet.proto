syntax = "proto3";

package greet;

option go_package= "github.com/izumarth/skilled-coding-archive/04-grpc-excercise/greet/proto";

message GreetRequest {
    string first_name = 1;
}

message GreetResponse {
    string result = 1;
}

service GreetService {
    rpc Greet (GreetRequest) returns (GreetResponse);
    rpc GreetManyTimes (GreetRequest) returns (stream GreetResponse);
    rpc LongGreet (stream GreetRequest) returns (GreetResponse);
    rpc GreetEveryone (stream GreetRequest) returns (stream GreetResponse);
}

message SumRequest {
    int64 number_one = 1;
    int64 number_two = 2;
}

message SumResponse {
    int64 result = 1;
}

service SumService {
    rpc Sum (SumRequest) returns (SumResponse);
}

message PrimesRequest {
    int64 number_one = 1;
}

message PrimesResponse {
    int64 result = 1;
}

service PrimesService {
    rpc Primes (PrimesRequest) returns (stream PrimesResponse);
}

message AvrageRequest {
    int64 number = 1;
}

message AverageResponse {
    float result = 1;
}

service AverageService {
    rpc Average (stream AvrageRequest) returns (AverageResponse);
}

message MaxRequest {
    int64 number = 1;
}

message MaxResponse {
    int64 result = 1;
}

service MaxService {
    rpc Max (stream MaxRequest) returns (stream MaxResponse);
}